https://www.itsolutionstuff.com/post/angular-10-dynamically-add-remove-input-fields-reactive-forms-exampleexample-2.html
https://www.tektutorialshub.com/angular/angular-formarray-example-in-reactive-forms/
https://www.bitovi.com/blog/managing-nested-and-dynamic-forms-in-angular
https://stackoverflow.com/questions/53400565/angular-reactive-form-validation-with-dynamically-named-controls


  productForm: FormGroup;

  constructor(private fb: FormBuilder) {

    this.productForm = this.fb.group({
      name: '',
      quantities: this.fb.array([
        new FormGroup({
          qty: new FormControl('', [Validators.required]),
          price: new FormControl('', [Validators.required]),
        })
      ]),
    });
  }

  quantities(): FormArray {
    return this.productForm.get("quantities") as FormArray
  }

  newQuantity(): FormGroup {
    return this.fb.group({

      qty: new FormControl('', [Validators.required]),
      price: new FormControl('', [Validators.required]),
    })
  }

  addQuantity() {
    this.quantities().push(this.newQuantity());
  }

  removeQuantity(i: number) {
    this.quantities().removeAt(i);
  }

  onSubmit() {
    console.log(this.productForm.value);
  }





<div class="container">

    <h1>Angular FormArray Example - ItSolutionStuff.com</h1>

    <form [formGroup]="productForm" (ngSubmit)="onSubmit()">

        <p>
            <label for="name">Product Name:</label>
            <input type="text" id="name" name="name" formControlName="name" class="form-control">
        </p>

        <table class="table table-bordered" formArrayName="quantities">
            <tr>
                <th colspan="2">Add Multiple Quantity:</th>
                <th width="150px"><button type="button" (click)="addQuantity()" class="btn btn-primary">Add More</button></th>
            </tr>
            <tr *ngFor="let quantity of quantities().controls; let i=index" [formGroupName]="i">
                <td>
                    Quantity :
                    <input type="text" formControlName="qty" class="form-control">
                    <div *ngIf="quantity?.controls.qty.invalid && quantity?.controls.qty.touched">invalid</div>
                </td>
                <td>
                    Price:
                    <input type="text" formControlName="price" class="form-control">
                    <div *ngIf="quantity?.controls.price.invalid && quantity?.controls.price.touched">invalid</div>

                </td>
                <td>
                    <button (click)="removeQuantity(i)" class="btn btn-danger">Remove</button>
                </td>
            </tr>
        </table>

        <button type="submit" [disabled]="!productForm.valid" class="btn btn-success">Submit</button>
        <div *ngIf="productForm.controls.quantities.invalid">invalid</div>

    </form>

    <br /> {{this.productForm.value | json}}
</div>
